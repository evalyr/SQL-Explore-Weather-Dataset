/* First, create a new WEATHER database. */

/* Create a table to store the storm data. */
CREATE OR REPLACE TABLE severe_weather
(
  episode_id INTEGER,
  event_id INTEGER,
  state STRING,
  state_fips_code INTEGER,
  event_type STRING,
  cz_type STRING,
  cz_fips_code INTEGER,
  cz_name STRING,
  wfo STRING,
  event_begin_time DATETIME,
  event_timezone STRING,
  event_end_time DATETIME,
  injuries_direct INTEGER,
  injuries_indirect INTEGER,
  deaths_direct INTEGER,
  deaths_indirect INTEGER,
  damage_property INTEGER,
  damage_crops INTEGER,
  source STRING,
  magnitude FLOAT,
  magnitude_type STRING,
  flood_cause STRING,
  tor_f_scale STRING,
  tor_length FLOAT,
  tor_width INTEGER, 
  tor_other_wfo STRING,
  location_index INTEGER,
  event_range FLOAT,
  event_azimuth STRING,
  reference_location STRING,
  event_latitude FLOAT,
  event_longitude FLOAT,
  event_point GEOGRAPHY 
);


/* Create a staging area that points to the S3 bucket. */
CREATE OR REPLACE STAGE severe_weather
    url = 's3://severe-weather';


/* List the files in the staging area (S3). */
LIST @severe_weather;


/* Define the format of CSV files to be loaded. */
CREATE OR REPLACE FILE FORMAT csv_format
  type = csv
  field_delimiter = ','
  record_delimiter = '\n'
  skip_header = 1
  null_if = ('')
  field_optionally_enclosed_by = '\042'; 


/* Load the storm data. */
COPY INTO severe_weather
  FROM @severe_weather/severe-weather
  file_format = csv_format;

/* Create a table to store state sizes. */
CREATE TABLE state_sizes
(
  state_fips_code INTEGER,
  state_name STRING,
  area_land_meters INTEGER,
  area_water_meters INTEGER
);

/* List the files in the staging area (S3). */
LIST @severe_weather;

/* Load the state sizing data. */
COPY INTO state_sizes
  FROM @severe_weather/state_sizing.csv
  file_format = csv_format;

/* Preview data in the state sizing table. */
SELECT * FROM state_sizes LIMIT 5;